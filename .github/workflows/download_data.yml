name: Daily JSON Download

on:
  # 定时触发器（北京时间每天12:00）
  schedule:
    - cron: '0 5 * * *'  # UTC时间4:00 (北京时间12:00)

  # 手动触发选项
  workflow_dispatch:

jobs:
  download-json:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 2. 设置下载目录
      - name: Prepare directory
        run: |
          TODAY=$(date -u +'%Y-%m-%d')
          mkdir -p "./data/$TODAY"
          echo "DIR_PATH=./data/$TODAY" >> $GITHUB_ENV
          echo "JSON_UPDATED=false" >> $GITHUB_ENV  # 初始化为false

      # 3. 定义JSON源列表
      - name: Setup JSON sources
        id: set-json-sources
        run: |
          # 定义要下载的JSON源，格式：name|url
          echo "sources='"
          echo "stats|https://profile-content.hydev.org/content/generated/metas.json"
          echo "users|https://profile-content.hydev.org/content/generated/friends/friends.json"
          echo "events|https://profile-api.hydev.org/exports/hykilp/posts.json"
          echo "'" >> $GITHUB_OUTPUT
        # 在shell中输出值
        shell: bash

      # 4. 循环下载所有JSON文件
      - name: Download multiple JSONs
        run: |
          # 使用IFS处理多行输入
          IFS=$'\n'
          for source in ${{ steps.set-json-sources.outputs.sources }}
          do
            # 拆分每行的name和url
            name=$(echo "$source" | cut -d'|' -f1)
            url=$(echo "$source" | cut -d'|' -f2)
            
            echo "📥 Downloading $name.json from $url"
            
            # 创建子目录并下载
            mkdir -p "$DIR_PATH/$name"
            curl -sSf "$url" -o "$DIR_PATH/$name/data.json"
            
            # 验证JSON格式
            if jq empty "$DIR_PATH/$name/data.json"; then
              echo "✅ $name.json downloaded and validated"
              echo "JSON_UPDATED=true" >> $GITHUB_ENV
            else
              echo "❌ Invalid JSON format for $name.json"
              exit 1
            fi
          done
        env:
          DIR_PATH: ${{ env.DIR_PATH }}

      # 5. 提交更改（仅当有更新时）
      - name: Commit changes
        if: env.JSON_UPDATED == 'true'
        run: |
          git config user.name "GitHub JSON Downloader"
          git config user.email "json-downloader@noreply.github.com"
          git add ./data/
          git commit -m "JSON data update: $(date -u +'%Y-%m-%d')"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
